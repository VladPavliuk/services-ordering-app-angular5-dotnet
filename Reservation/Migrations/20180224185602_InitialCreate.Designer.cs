// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Reservation.Models;
using System;

namespace Reservation.Migrations
{
    [DbContext(typeof(ReservationDbContext))]
    [Migration("20180224185602_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("Reservation.Models.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("Organization_IDID");

                    b.Property<int?>("Service_IDID");

                    b.Property<int?>("User_IDID");

                    b.HasKey("ID");

                    b.HasIndex("Organization_IDID");

                    b.HasIndex("Service_IDID");

                    b.HasIndex("User_IDID");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Reservation.Models.Organization", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Title");

                    b.HasKey("ID");

                    b.ToTable("Organization");
                });

            modelBuilder.Entity("Reservation.Models.OrganizationServiceRelation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Duration");

                    b.Property<int?>("Organization_IDID");

                    b.Property<decimal>("Price");

                    b.Property<int?>("Service_IDID");

                    b.HasKey("ID");

                    b.HasIndex("Organization_IDID");

                    b.HasIndex("Service_IDID");

                    b.ToTable("OrganizationServiceRelation");
                });

            modelBuilder.Entity("Reservation.Models.Service", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<decimal>("Duration");

                    b.Property<decimal>("Price");

                    b.Property<string>("Title");

                    b.HasKey("ID");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("Reservation.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("ID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Reservation.Models.Order", b =>
                {
                    b.HasOne("Reservation.Models.Organization", "Organization_ID")
                        .WithMany()
                        .HasForeignKey("Organization_IDID");

                    b.HasOne("Reservation.Models.Service", "Service_ID")
                        .WithMany()
                        .HasForeignKey("Service_IDID");

                    b.HasOne("Reservation.Models.User", "User_ID")
                        .WithMany()
                        .HasForeignKey("User_IDID");
                });

            modelBuilder.Entity("Reservation.Models.OrganizationServiceRelation", b =>
                {
                    b.HasOne("Reservation.Models.Organization", "Organization_ID")
                        .WithMany()
                        .HasForeignKey("Organization_IDID");

                    b.HasOne("Reservation.Models.Service", "Service_ID")
                        .WithMany()
                        .HasForeignKey("Service_IDID");
                });
#pragma warning restore 612, 618
        }
    }
}
